name: Amazingness Service Build and Test

on:
  workflow_dispatch:
  
jobs:
#   Test:
#     runs-on: ubuntu-latest
    
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v3
        
#     - name: Set up JDK 17
#       uses: actions/setup-java@v3
#       with:
#         java-version: 17
#         distribution: temurin
        
#     - name: Cache local Maven repository
#       uses: actions/cache@v3
#       with:
#         path: ~/.m2/repository
#         key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#         restore-keys: |
#           ${{ runner.os }}-maven-
          
#     - name: Unit Tests
#       run: mvn test -Dtest=AmazingUnitTest
      
#     - name: Integration Tests
#       run: mvn test -Dtest=AmazingResourceTest
      
#   SonarCloud-Analysis:
#       runs-on: ubuntu-latest
#       needs: [Test]
#       steps:
#         - name: Checkout
#           uses: actions/checkout@v3
#         - name: Set up JDK 17
#           uses: actions/setup-java@v3
#           with:
#             java-version: 17
#             distribution: temurin

#         - name: Cache local Maven repository
#           uses: actions/cache@v3
#           with:
#             path: ~/.m2/repository
#             key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#             restore-keys: |
#               ${{ runner.os }}-maven-
              
#         - name: Analyze with SonarCloud
#           env:
#             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#             SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           run: |
#             mvn verify sonar:sonar \
#             -Dsonar.host.url=https://sonarcloud.io \
#             -Dsonar.organization=amazingitorg \
#             -Dsonar.projectKey=AmazingITorg_amazingness-service \
#             -Dsonar.qualitygate.wait=true
            
#   Build-and-push-docker-image:
# #     needs: [Test, SonarCloud-Analysis, Snyk]
#     name: Build and push Docker image
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check out the repo
#         uses: actions/checkout@v3

#       - name: Set up JDK 17
#         uses: actions/setup-java@v3
#         with:
#           java-version: 17
#           distribution: temurin

#       - name: Cache local Maven repository
#         uses: actions/cache@v3
#         with:
#           path: ~/.m2/repository
#           key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#           restore-keys: |
#             ${{ runner.os }}-maven-

#       - name: Package Application
#         run: mvn package -Dmaven.test.skip

#       - name: Log in to Docker Hub
#         uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
          
#       - name: Extract metadata (tags, labels) for Docker
#         id: meta
#         uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
#         with:
#           images: ${{ secrets.DOCKER_NAMESPACE }}/${{ secrets.DOCKER_REPOSITORY }}
#           tags: |
#             type=raw,dev
      
#       - name: Build and push Docker image
#         uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
#         with:
#           context: .
#           file: src/main/docker/Dockerfile.jvm
#           push: true
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}
          
  Build-and-push-helm-chart:
    name: Build and push to GitHub Container Registry
#     needs: [Build-and-push-docker-image]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Helm
        id: helm
        run: |
            cd helm
            helm dependency update
            cd ..
            helm package helm        
            echo ${{ secrets.PASSWORD_GITHUB }} | helm registry login ghcr.io --username  ${{ secrets.USER_GITHUB }} --password-stdin
            helm push amazingness-service*.tgz oci://ghcr.io/cekocvetkov
  
#   Snyk:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@master
#       - name: Run Snyk to check for vulnerabilities
#         uses: snyk/actions/maven@master
#         env:
#           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
